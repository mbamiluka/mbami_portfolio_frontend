{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\mbami_portfolio\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const tokenIsValid = fetch('http://localhost:8080/auth/validate', {\n      headers: {\n        Authorization: `Bearer ${storedToken}`\n      }\n    }).then(response => {\n      if (response.ok) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    if (storedToken && tokenIsValid) {\n      const tokenExpiration = localStorage.getItem('tokenExpiration');\n      if (new Date().getTime() < tokenExpiration) {\n        setToken(storedToken);\n        setIsAuthenticated(true);\n      } else {\n        localStorage.removeItem('token');\n        localStorage.removeItem('tokenExpiration');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    if (!username || !password) {\n      setError('Please fill in all fields');\n      return false;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8080/auth/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const tokenExpiration = new Date().getTime() + 10 * 60 * 60 * 1000; // 10 hours\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('tokenExpiration', tokenExpiration);\n        setToken(data.token);\n        setIsAuthenticated(true);\n        setError(null);\n        return true;\n      } else {\n        setError('Invalid username or password');\n        return false;\n      }\n    } catch (error) {\n      setError('Something went wrong');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('tokenExpiration');\n    setToken(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      loading,\n      error,\n      token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"iVmT840sc2Z4/RdtFMtlcHIuWmU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","token","setToken","storedToken","localStorage","getItem","tokenIsValid","fetch","headers","Authorization","then","response","ok","tokenExpiration","Date","getTime","removeItem","login","username","password","method","body","JSON","stringify","data","json","setItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["E:/projects/mbami_portfolio/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const storedToken = localStorage.getItem('token');\r\n        const tokenIsValid = fetch('http://localhost:8080/auth/validate', {\r\n            headers: {\r\n                Authorization: `Bearer ${storedToken}`,\r\n            },\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (storedToken && tokenIsValid) {\r\n            const tokenExpiration = localStorage.getItem('tokenExpiration');\r\n            if (new Date().getTime() < tokenExpiration) {\r\n                setToken(storedToken);\r\n                setIsAuthenticated(true);\r\n            } else {\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('tokenExpiration');\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const login = async (username, password) => {\r\n        if (!username || !password) {\r\n            setError('Please fill in all fields');\r\n            return false;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch('http://localhost:8080/auth/signin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                const tokenExpiration = new Date().getTime() + 10 * 60 * 60 * 1000; // 10 hours\r\n                localStorage.setItem('token', data.token);\r\n                localStorage.setItem('tokenExpiration', tokenExpiration);\r\n                setToken(data.token);\r\n                setIsAuthenticated(true);\r\n                setError(null);\r\n                return true;\r\n            } else {\r\n                setError('Invalid username or password');\r\n                return false;\r\n            }\r\n        } catch (error) {\r\n            setError('Something went wrong');\r\n            return false;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('tokenExpiration');\r\n        setToken(null);\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, login, logout, loading, error, token }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}