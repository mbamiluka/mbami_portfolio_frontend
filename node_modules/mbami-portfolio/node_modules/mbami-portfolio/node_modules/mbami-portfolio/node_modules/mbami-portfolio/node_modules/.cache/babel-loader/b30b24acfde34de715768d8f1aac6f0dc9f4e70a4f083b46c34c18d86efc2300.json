{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\mbami_portfolio\\\\frontend\\\\src\\\\components\\\\organisms\\\\ContentEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentEditor = () => {\n  _s();\n  const [content, setContent] = useState(''); // Keep track of editor content\n  const quillRef = useRef(null);\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/v1/project');\n        setProjects(response.data);\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n  useEffect(() => {\n    console.log(selectedProject);\n    console.log(content);\n  }, [selectedProject, content]);\n\n  // Function to handle image uploads\n  const handleImageUpload = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/images/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data.url; // Cloudinary URL for the image\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      return null;\n    }\n  };\n\n  // Custom handler for inserting uploaded image\n  const imageHandler = useCallback(() => {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click();\n    input.onchange = async () => {\n      const file = input.files[0];\n      const url = await handleImageUpload(file);\n      if (url) {\n        const quill = quillRef.current.getEditor(); // Get the editor instance\n        const range = quill.getSelection(); // Get the current cursor position\n        quill.insertEmbed(range.index, 'image', url); // Insert the image at the cursor\n        quill.setSelection(range.index + 1); // Move cursor after the image\n      }\n    };\n  }, []);\n\n  // Function to handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedProject) {\n      alert('Please select a project');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8080/api/v1/contents', {\n        name: event.target.name.value,\n        contentType: 'text/html',\n        content,\n        projectId: selectedProject.value\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Content saved:', response.data);\n    } catch (error) {\n      console.error('Error saving content:', error);\n    }\n  };\n\n  // Quill modules with the custom image handler\n  const modules = {\n    toolbar: {\n      container: [[{\n        header: '1'\n      }, {\n        header: '2'\n      }, {\n        font: []\n      }], [{\n        list: 'ordered'\n      }, {\n        list: 'bullet'\n      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n        align: []\n      }], ['link', 'image'], ['clean']],\n      handlers: {\n        image: imageHandler\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Content Name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: content // Bind editor content to state\n        ,\n        onChange: setContent // Update state when editor content changes\n        ,\n        modules: modules // Apply the custom toolbar modules\n        ,\n        ref: quillRef // Set the editor ref\n        ,\n        theme: \"snow\" // Use the \"snow\" theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: projects.map(project => ({\n          value: project.id,\n          label: project.name\n        })),\n        value: selectedProject,\n        onChange: setSelectedProject,\n        placeholder: \"Select a project\",\n        styles: {\n          control: styles => ({\n            ...styles,\n            width: '200px'\n          }),\n          menuPortalTarget: base => ({\n            ...base,\n            zIndex: 999\n          })\n        },\n        menuPortalTarget: document.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(ContentEditor, \"eZd9Bx7VplZlq4elvyovtkUn8XA=\");\n_c = ContentEditor;\nexport default ContentEditor;\nvar _c;\n$RefreshReg$(_c, \"ContentEditor\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","ReactQuill","Select","axios","jsxDEV","_jsxDEV","ContentEditor","_s","content","setContent","quillRef","projects","setProjects","selectedProject","setSelectedProject","fetchProjects","response","get","data","error","console","log","handleImageUpload","file","formData","FormData","append","post","headers","url","imageHandler","input","document","createElement","setAttribute","click","onchange","files","quill","current","getEditor","range","getSelection","insertEmbed","index","setSelection","handleSubmit","event","preventDefault","alert","name","target","value","contentType","projectId","modules","toolbar","container","header","font","list","align","handlers","image","children","onSubmit","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onChange","ref","theme","options","map","project","id","label","styles","control","width","menuPortalTarget","base","zIndex","body","_c","$RefreshReg$"],"sources":["E:/projects/mbami_portfolio/frontend/src/components/organisms/ContentEditor.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\n\r\nconst ContentEditor = () => {\r\n    const [content, setContent] = useState(''); // Keep track of editor content\r\n    const quillRef = useRef(null);\r\n    const [projects, setProjects] = useState([]);\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchProjects = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/v1/project');\r\n                setProjects(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching projects:', error);\r\n            }\r\n        }; fetchProjects();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(selectedProject);\r\n        console.log(content);\r\n    }, [selectedProject, content]);\r\n\r\n    // Function to handle image uploads\r\n    const handleImageUpload = async (file) => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/v1/images/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            return response.data.url; // Cloudinary URL for the image\r\n        } catch (error) {\r\n            console.error('Error uploading image:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // Custom handler for inserting uploaded image\r\n    const imageHandler = useCallback(() => {\r\n        const input = document.createElement('input');\r\n        input.setAttribute('type', 'file');\r\n        input.setAttribute('accept', 'image/*');\r\n        input.click();\r\n\r\n        input.onchange = async () => {\r\n            const file = input.files[0];\r\n            const url = await handleImageUpload(file);\r\n\r\n            if (url) {\r\n                const quill = quillRef.current.getEditor(); // Get the editor instance\r\n                const range = quill.getSelection(); // Get the current cursor position\r\n                quill.insertEmbed(range.index, 'image', url); // Insert the image at the cursor\r\n                quill.setSelection(range.index + 1); // Move cursor after the image\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // Function to handle form submission\r\n    const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!selectedProject) {\r\n        alert('Please select a project');\r\n        return;\r\n    }\r\n    try {\r\n        const response = await axios.post('http://localhost:8080/api/v1/contents', {\r\n            name: event.target.name.value,\r\n            contentType: 'text/html',\r\n            content,\r\n            projectId: selectedProject.value,\r\n        }, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        console.log('Content saved:', response.data);\r\n    } catch (error) {\r\n        console.error('Error saving content:', error);\r\n    }\r\n};\r\n\r\n    // Quill modules with the custom image handler\r\n    const modules = {\r\n        toolbar: {\r\n            container: [\r\n                [{ header: '1' }, { header: '2' }, { font: [] }],\r\n                [{ list: 'ordered' }, { list: 'bullet' }],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ align: [] }],\r\n                ['link', 'image'],\r\n                ['clean'],\r\n            ],\r\n            handlers: {\r\n                image: imageHandler,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Content Name\" name='name'/>\r\n                <ReactQuill\r\n                    value={content} // Bind editor content to state\r\n                    onChange={setContent} // Update state when editor content changes\r\n                    modules={modules} // Apply the custom toolbar modules\r\n                    ref={quillRef} // Set the editor ref\r\n                    theme=\"snow\" // Use the \"snow\" theme\r\n                />\r\n                <Select\r\n                    options={projects.map((project) => ({ value: project.id, label: project.name }))}\r\n                    value={selectedProject}\r\n                    onChange={setSelectedProject}\r\n                    placeholder=\"Select a project\"\r\n                    styles={{\r\n                        control: (styles) => ({\r\n                            ...styles,\r\n                            width: '200px',\r\n                        }),\r\n                        menuPortalTarget: (base) => ({ ...base, zIndex: 999 }),\r\n                    }}\r\n                    menuPortalTarget={document.body}\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContentEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}