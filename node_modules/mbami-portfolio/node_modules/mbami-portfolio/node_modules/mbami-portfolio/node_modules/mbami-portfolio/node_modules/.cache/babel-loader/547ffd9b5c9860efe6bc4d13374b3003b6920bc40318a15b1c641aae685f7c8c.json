{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\mbami_portfolio\\\\frontend\\\\src\\\\components\\\\molecules\\\\AddExperience.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddExperience = () => {\n  _s();\n  const [msg, setMsg] = useState('');\n  const [expTypes, setExpTypes] = useState([]);\n  const [selectedExpType, setSelectedExpType] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8080/api/v1/expTypes', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setExpTypes(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const handleExpTypeChange = selectedExpType => {\n    setSelectedExpType({\n      id: selectedExpType.id\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = {\n      institution: formData.get('name'),\n      startDate: formData.get('start'),\n      expType: selectedExpType\n    };\n    fetch('http://localhost:8080/api/v1/experience', {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(setMsg('Experience added successfully'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Institution name...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: expTypes,\n        onChange: handleExpTypeChange,\n        placeholder: \"Experience Type...\",\n        getOptionLabel: option => option.name,\n        styles: {\n          control: styles => ({\n            ...styles,\n            marginBottom: '3rem'\n          })\n        },\n        menuPortalTarget: document.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(AddExperience, \"xR1hiPY3ndLICwVYhcdTJC+JVyI=\");\n_c = AddExperience;\nexport default AddExperience;\nvar _c;\n$RefreshReg$(_c, \"AddExperience\");","map":{"version":3,"names":["React","useEffect","useState","Select","jsxDEV","_jsxDEV","AddExperience","_s","msg","setMsg","expTypes","setExpTypes","selectedExpType","setSelectedExpType","fetch","method","headers","then","response","json","data","catch","err","console","log","handleExpTypeChange","id","handleSubmit","event","preventDefault","formData","FormData","target","institution","get","startDate","expType","localStorage","getItem","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","required","options","onChange","getOptionLabel","option","styles","control","marginBottom","menuPortalTarget","document","_c","$RefreshReg$"],"sources":["E:/projects/mbami_portfolio/frontend/src/components/molecules/AddExperience.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Select from 'react-select';\r\n\r\nconst AddExperience = () => {\r\n    const [msg, setMsg] = useState('');\r\n    const [expTypes, setExpTypes] = useState([]);\r\n    const [selectedExpType, setSelectedExpType] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8080/api/v1/expTypes', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setExpTypes(data);\r\n        }\r\n        )\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    const handleExpTypeChange = (selectedExpType) => {\r\n        setSelectedExpType({\r\n            id: selectedExpType.id\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const data = {\r\n            institution: formData.get('name'),\r\n            startDate: formData.get('start'),\r\n            expType: selectedExpType\r\n        };\r\n        fetch('http://localhost:8080/api/v1/experience', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n        .then(response => response.json())\r\n        .then(setMsg('Experience added successfully'))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Add Experience</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name='name' placeholder=\"Institution name...\" required />\r\n                <input type='date' name='start' />\r\n                <input type='date' name='end' />\r\n                \r\n                <Select\r\n                    options={expTypes}\r\n                    onChange={handleExpTypeChange}\r\n                    placeholder=\"Experience Type...\"\r\n                    getOptionLabel={(option) => option.name}\r\n                    styles={{\r\n                        control: (styles) => ({\r\n                            ...styles,\r\n                            marginBottom: '3rem',\r\n                        }),\r\n                    }}\r\n                    menuPortalTarget={document.body}\r\n                />\r\n                <button type=\"submit\">Add</button>\r\n            </form>\r\n            <p>{msg}</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddExperience;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}