{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\mbami_portfolio\\\\frontend\\\\src\\\\components\\\\molecules\\\\AddSkillCategory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSkillCategory = () => {\n  _s();\n  const apiUrl = process.env.REACT_APP_MBAMI_PORTFOLIO_BACKEND_URL_DEVELOPMENT;\n  const [msg, setMsg] = useState('');\n  useEffect(() => {\n    setTimeout(() => {\n      setMsg('');\n    }, 2000);\n  }, [msg]);\n  useEffect(() => {\n    console.log('apiUrl:', apiUrl);\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const categName = formData.get('name');\n    const data = {\n      name: categName\n    };\n    fetch(`${apiUrl}/api/v1/skillCategory`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      setMsg('Skill Category added successfully');\n    }).catch(error => {\n      console.error('Error Adding Category:', error);\n      setMsg('Error adding Category');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Add Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(AddSkillCategory, \"942RDBiYeZW+/9+gsfgyyUrcHV8=\");\n_c = AddSkillCategory;\nexport default AddSkillCategory;\n\n//todo: When new skill category is added, the list of skill categories should be updated in the AddSkill component.\n/**\r\n * 1. Add a prop to AddSkillCategory component to pass a function that updates the skill categories.\r\n * 2. Call the function in AddSkillCategory component after adding a new skill category.\r\n * 3. Update the AddSkill component to pass a function that updates the skill categories to AddSkillCategory component.\r\n * 4. Update the AddSkill component to update the skill categories when the function is called.\r\n * 5. Test the implementation by adding a new skill category and checking if the list of skill categories is updated in the Add\r\n *   Skill component.\r\n * 6. If the implementation is successful, commit the changes to the repository\r\n * \r\n */\nvar _c;\n$RefreshReg$(_c, \"AddSkillCategory\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddSkillCategory","_s","apiUrl","process","env","REACT_APP_MBAMI_PORTFOLIO_BACKEND_URL_DEVELOPMENT","msg","setMsg","setTimeout","console","log","handleSubmit","event","preventDefault","formData","FormData","target","categName","get","data","name","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","required","_c","$RefreshReg$"],"sources":["E:/projects/mbami_portfolio/frontend/src/components/molecules/AddSkillCategory.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst AddSkillCategory = () => {\r\n    const apiUrl = process.env.REACT_APP_MBAMI_PORTFOLIO_BACKEND_URL_DEVELOPMENT\r\n\r\n    const [msg, setMsg] = useState('');\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setMsg('');\r\n        }, 2000);\r\n    }, [msg]);\r\n\r\n    useEffect(() => {\r\n        console.log('apiUrl:', apiUrl);\r\n    }\r\n    , []);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        const categName = formData.get('name');\r\n        const data = {\r\n            name: categName\r\n        };\r\n        fetch(`${apiUrl}/api/v1/skillCategory`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                setMsg('Skill Category added successfully');\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error Adding Category:', error);\r\n                setMsg('Error adding Category');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Add Category:</label>\r\n                    <input type=\"text\" required name=\"name\"/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Add</button>\r\n                </div>\r\n                <div>\r\n                    <span>{msg}</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddSkillCategory;\r\n\r\n//todo: When new skill category is added, the list of skill categories should be updated in the AddSkill component.\r\n/**\r\n * 1. Add a prop to AddSkillCategory component to pass a function that updates the skill categories.\r\n * 2. Call the function in AddSkillCategory component after adding a new skill category.\r\n * 3. Update the AddSkill component to pass a function that updates the skill categories to AddSkillCategory component.\r\n * 4. Update the AddSkill component to update the skill categories when the function is called.\r\n * 5. Test the implementation by adding a new skill category and checking if the list of skill categories is updated in the Add\r\n *   Skill component.\r\n * 6. If the implementation is successful, commit the changes to the repository\r\n * \r\n */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}